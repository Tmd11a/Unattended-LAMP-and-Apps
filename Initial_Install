#!/bin/bash
#Run me as Sudo
USER=''
PASS=''
# $1 is our IP address or DNS
URL='' #The URL should be to the location to download other scripts

echo "-----Initial Setup Script-----"
apt-get -q update
apt-get -y -q upgrade

#Silent TZdata install
echo "US/Central" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata


#Add user with a home directory and password (-m  creates a home directory)
adduser --disabled-password --gecos ',,,,' $USER
addgroup $USER sudo
addgroup $USER www-data
echo -e "$USER:$PASS" | sudo chpasswd
echo ""


#Make logging file
touch /var/log/user-logs
chown $USER:$USER /var/log/user-logs
chmod 774 /var/log/user-logs
echo -e "-----START-----" > /var/log/user-logs #This overwrites a log for a fresh start
echo -e "--\n$USER has been added and added to GROUP:SUDO" >> /var/log/user-logs

#Setup .ssh and authorized keys for new user ($USER)
mkdir /home/$USER/.ssh
chmod 700 /home/$USER/.ssh
touch /home/$USER/.ssh/authorized_keys
chown -R $USER:$USER /home/$USER/.ssh
echo -e "--\nssh directory has been added, with authorized_keys" >> /var/log/user-logs

#Disable root login
sed -i "s/PermitRootLogin .*/PermitRootLogin no/" /etc/ssh/sshd_config
service ssh restart

###############################################
#IP Tables section
###############################################

#Firewall Rules
touch /etc/iptables.firewall.rules
chmod 777 /etc/iptables.firewall.rules

#Overwrite iptables rules
cat <<EOF>/etc/iptables.firewall.rules
*filter

#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn"t use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT -d 127.0.0.0/8 -j REJECT

#  Accept all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#  Allow all outbound traffic - you can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT

#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

#  Allow Application Server connections from anywhere (the normal port for Tomcat).
-A INPUT -p tcp --dport 8080 -j ACCEPT
-A INPUT -p tcp --dport 8443 -j ACCEPT

# all DNS connections from anywhere
-A INPUT -p tcp --dport 53 -j ACCEPT
-A INPUT -p udp --dport 53 -j ACCEPT

#allow LDAP connections from anywhere
-A INPUT -p tcp --dport 389 -j ACCEPT
-A INPUT -p udp --dport 389 -j ACCEPT
-A INPUT -p tcp --dport 636 -j ACCEPT
-A INPUT -p tcp --dport 666 -j ACCEPT
-A INPUT -p tcp --dport 3268 -j ACCEPT
-A INPUT -p tcp --dport 3269 -j ACCEPT

# allow mysql connections from anywhere
-A INPUT -p tcp --dport 3306 -j ACCEPT
-A INPUT -p udp --dport 3306 -j ACCEPT
-A OUTPUT -p tcp --sport 3306 -j ACCEPT

#  Allow SSH connections
#
#  The -dport number should be the same port number you set in sshd_config
#
-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT

#  Allow ping
-A INPUT -p icmp -j ACCEPT

#  Log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7

#  Drop all other inbound - default deny unless explicitly allowed policy
-A INPUT -j DROP
-A FORWARD -j DROP

COMMIT
EOF

echo -e "--\niptables has been created" >> /var/log/user-logs
echo ""

#Save rules to new rules file
chmod 644 /etc/iptables.firewall.rules
touch /etc/network/if-pre-up.d/firewall
chmod 777 /etc/network/if-pre-up.d/firewall
iptables-restore < /etc/iptables.firewall.rules

cat<<EOF>/etc/network/if-pre-up.d/firewall
#!/bin/sh
/sbin/iptables-restore < /etc/iptables.firewall.rules
EOF

#Change permissions on firewall script
chmod 771 /etc/network/if-pre-up.d/firewall
chmod +x /etc/network/if-pre-up.d/firewall


echo -e "--\nYou have saved the firewall rules." >> /var/log/user-logs
echo ""


###############################################
#Fail2Ban section
###############################################

#Install F2B
apt-get -q -y install fail2ban

#Set max retries and lockout time in configuration file
touch /etc/fail2ban/jail.local
chown root:root /etc/fail2ban/jail.local
chmod 666 /etc/fail2ban/jail.local

cat<<EOF > /etc/fail2ban/jail.local
maxtry = 4
bantime = 600
EOF
#Make permissions secure
chmod 600 /etc/fail2ban/jail.local



###############################################
#MySQL Install section
###############################################

#Preseed the root password for MySQL
# sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password $PASS"
# sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $PASS"

# apt-get -q -y install mysql-server mysql-client
# if grep -q -F [client] /etc/mysql/my.cnf; then
#     echo -e "--\nmy.cnf was NOT changed" >> /var/log/user-logs
# else
#     echo -e "[client]\nuser = root\npassword = $PASS" >> /etc/mysql/my.cnf
# fi

# #Bind Address needs to be changed if you want remote access to MySQL
# sed -i 's/bind-address.*/bind-address            = 0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf

# echo "mysqld: ALL" >> /etc/hosts.allow

# service mysql restart

# echo -e "--\nMySQL installed, changed my.cnf" >> /var/log/user-logs
# echo ""
# echo -e "--\nMySQL bind address changed, open for Splunk and MySQL WB connect" >> /var/log/user-logs
# echo ""


# #Create database, Make new user
# mysql -e "CREATE DATABASE blank_data;"
# mysql -e "CREATE USER '$USER'@'%' IDENTIFIED BY '$PASS';"
# mysql -e "GRANT select, update, insert, delete on blank_data.* to '$USER'@'%' IDENTIFIED BY '$PASS';"
# mysql -e "FLUSH PRIVILEGES;"

# #Secure the MySQL install by running these queries (Taken from mysql_secure_installation script)
# mysql -e -f "DELETE FROM mysql.user WHERE User='';"
# mysql -e -f "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
# mysql -e -f "DROP DATABASE IF EXISTS test;"
# mysql -e -f "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
# mysql -e -f "FLUSH PRIVILEGES;"

# echo -e "--\nblank_data created and mysql_secure_installation run" >> /var/log/user-logs
# echo ""
# echo ""


###############################################
#Scripts Section
###############################################
#Pull other scripts and make them executable
wget -O /home/$USER/apachessl $URL
chmod +x /home/$USER/apachessl

wget -O /home/$USER/moodle $URL
chmod +x /home/$USER/moodle

wget -O /home/$USER/wordpress $URL
chmod +x /home/$USER/wordpress

wget -O /home/$USER/joomla $URL
chmod +x /home/$USER/joomla

wget -O /home/$USER/sugar $URL
chmod +x /home/$USER/sugar

wget -O /home/$USER/tomcat $URL
chmod +x /home/$USER/tomcat

wget -O /home/$USER/phpmyadmin $URL
chmod +x /home/$USER/phpmyadmin

wget -O /home/$USER/ldap $URL
chmod +x /home/$USER/ldap

wget -O /home/$USER/maldetect $URL
chmod +x /home/$USER/maldetect


echo -e "\n\n-----SSH-----"
echo -e "ssh-keygen"
echo -e "ssh-copy-id -i ~/.ssh/id_rsa.pub $USER@$1"
echo ""
