#!/bin/bash
#Run me as Sudo
USER=""
PW=""
IP=""

echo "-----Initial Setup Script-----"
apt-get -q update
#apt-get -y -q upgrade

echo "US/Central" > /etc/timezone
dpkg-reconfigure -f noninteractive tzdata


#Add user with a home directory and password (-m  creates a home directory)
adduser --disabled-password --gecos ',,,,' $USER
addgroup $USER sudo
addgroup $USER www-data
echo -e "$USER:$PASS" | sudo chpasswd
echo ""
#read -n1 -p "You have created a new user! Press any key to cont..."

#Make logging file
touch /var/log/$USERLogs
chown $USER:$USER /var/log/$USERLogs
chmod 774 /var/log/$USERLogs
echo -e "-----START-----" > /var/log/$USERLogs #This overwrites a log for a fresh start
echo -e "--\n$USER has been added and added to GROUP:SUDO" >> /var/log/$USERLogs

#Setup .ssh and authorized keys for new user ($USER)
mkdir /home/$USER/.ssh
chmod 700 /home/$USER/.ssh
touch /home/$USER/.ssh/authorized_keys
chown -R $USER:$USER /home/$USER/.ssh
echo -e "--\nssh directory has been added, with authorized_keys" >> /var/log/$USERLogs

#Disable root login
sed -i "s/PermitRootLogin .*/PermitRootLogin no/" /etc/ssh/sshd_config
service ssh restart

# #My user will not have to provide password for sudo commands
# sed -i "/%sudo   ALL=(ALL:ALL) ALL/a $USER ALL = NOPASSWD : ALL" /etc/sudoers


#read -n1 -p "About to start iptables rules. Press any key to cont..."
#Firewall Rules
touch /etc/iptables.firewall.rules
chmod 777 /etc/iptables.firewall.rules

#Overwrite iptables rules
cat <<EOF>/etc/iptables.firewall.rules
*filter

#  Allow all loopback (lo0) traffic and drop all traffic to 127/8 that doesn"t use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT -d 127.0.0.0/8 -j REJECT

#  Accept all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

#  Allow all outbound traffic - you can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT

#  Allow HTTP and HTTPS connections from anywhere (the normal ports for websites and SSL).
-A INPUT -p tcp --dport 80 -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

#  Allow Application Server connections from anywhere (the normal port for Tomcat).
-A INPUT -p tcp --dport 8080 -j ACCEPT
-A INPUT -p tcp --dport 8443 -j ACCEPT

# all DNS connections from anywhere
-A INPUT -p tcp --dport 53 -j ACCEPT
-A INPUT -p udp --dport 53 -j ACCEPT

#allow LDAP connections from anywhere
-A INPUT -p tcp --dport 389 -j ACCEPT
-A INPUT -p udp --dport 389 -j ACCEPT
-A INPUT -p tcp --dport 636 -j ACCEPT
-A INPUT -p tcp --dport 666 -j ACCEPT
-A INPUT -p tcp --dport 3268 -j ACCEPT
-A INPUT -p tcp --dport 3269 -j ACCEPT

# allow mysql connections from anywhere
-A INPUT -p tcp --dport 3306 -j ACCEPT
-A INPUT -p udp --dport 3306 -j ACCEPT
-A OUTPUT -p tcp --sport 3306 -j ACCEPT

#  Allow SSH connections
#
#  The -dport number should be the same port number you set in sshd_config
#
-A INPUT -p tcp -m state --state NEW --dport 22 -j ACCEPT

#  Allow ping
-A INPUT -p icmp -j ACCEPT

#  Log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7

#  Drop all other inbound - default deny unless explicitly allowed policy
-A INPUT -j DROP
-A FORWARD -j DROP

COMMIT
EOF

echo -e "--\niptables has been created" >> /var/log/$USERLogs
echo ""
#read -n1 -p "You have setup iptables. Press any key to cont..."

#Save rules to new rules file
chmod 644 /etc/iptables.firewall.rules
touch /etc/network/if-pre-up.d/firewall
chmod 777 /etc/network/if-pre-up.d/firewall
iptables-restore < /etc/iptables.firewall.rules

cat<<EOF>/etc/network/if-pre-up.d/firewall
#!/bin/sh
/sbin/iptables-restore < /etc/iptables.firewall.rules
EOF

#Change permissions on firewall script
chmod 771 /etc/network/if-pre-up.d/firewall
chmod +x /etc/network/if-pre-up.d/firewall


echo -e "--\nYou have saved the firewall rules." >> /var/log/$USERLogs
echo ""
#read -n1 -p "You have saved the firewall rules. Press any key to cont..."


#Install F2B
apt-get -q -y install fail2ban

#Set max retries and lockout time in configuration file
touch /etc/fail2ban/jail.local
chown root:root /etc/fail2ban/jail.local
chmod 666 /etc/fail2ban/jail.local

cat<<EOF > /etc/fail2ban/jail.local
maxtry = 4
bantime = 600
EOF

chmod 600 /etc/fail2ban/jail.local


wget http://www.rfxn.com/downloads/maldetect-current.tar.gz
tar xfz maldetect-current.tar.gz
cd maldetect-*
./install.sh


#MySQL Install
sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password $PW"
sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $PW"

apt-get -q -y install mysql-server mysql-client

if grep -q -F [client] /etc/mysql/my.cnf; then
    echo -e "--\nmy.cnf was NOT changed" >> /var/log/$USERLogs
else
    echo -e "[client]\nuser = root\npassword = $PASS" >> /etc/mysql/my.cnf
fi


echo -e "--\nMySQL installed, changed my.cnf" >> /var/log/$USERLogs
echo ""
#read -n1 -p "Done downloading mysql, changed my.cnf Press any key to cont..."


#Create database
mysql -e "CREATE DATABASE it410_data;"
#Make new user
mysql -e "CREATE USER '$USER'@'%' IDENTIFIED BY '$PASS';"
#Grant permissions
mysql -e "GRANT select, update, insert, delete on it410_data.* to '$USER'@'%' IDENTIFIED BY '$PASS';"
#Flush it
mysql -e "FLUSH PRIVILEGES;"

#Secure the MySQL install by running these queries (Taken from mysql_secure_installation script)
mysql -e -f "DELETE FROM mysql.user WHERE User='';"
mysql -e -f "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
mysql -e -f "DROP DATABASE IF EXISTS test;"
mysql -e -f "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
mysql -e -f "FLUSH PRIVILEGES;"


echo ""

#Pull other scripts and make them executable
wget -O /home/$USER/apachessl https://www.dropbox.com/s/au692xcvzqo8oc7/Apache_SSL?dl=0
chmod +x /home/$USER/apachessl

wget -O /home/$USER/moodle https://www.dropbox.com/s/kuajcpgdvrzghgs/Moodle?dl=0
chmod +x /home/$USER/moodle

wget -O /home/$USER/wordpress https://www.dropbox.com/s/yd5mlxqev4yo7pk/Wordpress?dl=0
chmod +x /home/$USER/wordpress

wget -O /home/$USER/joomla https://www.dropbox.com/s/7h6ea9rfvvme9pm/Joomla?dl=0
chmod +x /home/$USER/joomla

wget -O /home/$USER/sugar https://www.dropbox.com/s/f27vxgnmukaf8we/Sugar?dl=0
chmod +x /home/$USER/sugar

wget -O /home/$USER/tomcat https://www.dropbox.com/s/6sswa72r8we238h/Tomcat?dl=0
chmod +x /home/$USER/tomcat

wget -O /home/$USER/phpmyadmin https://www.dropbox.com/s/utytyusceyidkog/PhpMyAdmin?dl=0
chmod +x /home/$USER/phpmyadmin

wget -O /home/$USER/ldap https://www.dropbox.com/s/ihyeo77eqywhgka/LDAP?dl=0
chmod +x /home/$USER/ldap

echo -e "\n\n-----SSH-----"
echo -e "ssh-keygen"
echo -e "ssh-copy-id -i ~/.ssh/id_rsa.pub $USER@$IP"
echo ""
read -n1 -p "Copy the over commands. Press any key to continue..."
